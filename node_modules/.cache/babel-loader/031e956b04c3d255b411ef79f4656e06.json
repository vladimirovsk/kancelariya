{"ast":null,"code":"var _jsxFileName = \"/Users/s.vladimirov/Project/React/kancelaria/src/components/FlipCard/components/FlipCard.js\";\nimport React, { PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport cx from 'classnames';\nimport contains from '../helpers/contains';\nimport injectStyle from '../helpers/injectStyle'; // Auto inject the styles (will only be done once)\n\ninjectStyle();\nexport default React.createClass({\n  displayName: 'ReactFlipCard',\n  propTypes: {\n    type: PropTypes.string,\n    flipped: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onFlip: PropTypes.func,\n    onKeyDown: PropTypes.func,\n\n    children(props, propName, componentName) {\n      const prop = props[propName];\n\n      if (React.Children.count(prop) !== 2) {\n        return new Error('`' + componentName + '` ' + 'should contain exactly two children. ' + 'The first child represents the front of the card. ' + 'The second child represents the back of the card.');\n      }\n    }\n\n  },\n\n  getDefaultProps() {\n    return {\n      type: 'horizontal',\n      flipped: false,\n      disabled: false\n    };\n  },\n\n  getInitialState() {\n    return {\n      hasFocus: false,\n      isFlipped: this.props.flipped\n    };\n  },\n\n  componentDidMount() {\n    this._hideFlippedSide();\n  },\n\n  componentWillReceiveProps(newProps) {\n    // Make sure both sides are displayed for animation\n    this._showBothSides(); // Wait for display above to take effect\n\n\n    setTimeout(() => {\n      this.setState({\n        isFlipped: newProps.flipped\n      });\n    }, 0);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    // If card is flipping to back via props, track element for focus\n    if (!this.props.flipped && nextProps.flipped) {\n      // The element that focus will return to when flipped back to front\n      this.focusElement = document.activeElement; // Indicates that the back of card needs focus\n\n      this.focusBack = true;\n    } // If isFlipped has changed need to notify\n\n\n    if (this.state.isFlipped !== nextState.isFlipped) {\n      this.notifyFlip = true;\n    }\n  },\n\n  componentDidUpdate() {\n    // If card has flipped to front, and focus is still within the card\n    // return focus to the element that triggered flipping to the back.\n    if (!this.props.flipped && this.focusElement && contains(findDOMNode(this), document.activeElement)) {\n      this.focusElement.focus();\n      this.focusElement = null;\n    } // Direct focus to the back if needed\n\n    /* eslint brace-style:0 */\n    else if (this.focusBack) {\n        this.refs.back.focus();\n        this.focusBack = false;\n      } // Notify card being flipped\n\n\n    if (this.notifyFlip && typeof this.props.onFlip === 'function') {\n      this.props.onFlip(this.state.isFlipped);\n      this.notifyFlip = false;\n    } // Hide whichever side of the card is down\n\n\n    setTimeout(this._hideFlippedSide, 600);\n  },\n\n  handleFocus() {\n    if (this.props.disabled) return;\n    this.setState({\n      isFlipped: true\n    });\n  },\n\n  handleBlur() {\n    if (this.props.disabled) return;\n    this.setState({\n      isFlipped: false\n    });\n  },\n\n  handleKeyDown(e) {\n    if (typeof this.props.onKeyDown === 'function') {\n      this.props.onKeyDown(e);\n    }\n  },\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: cx({\n        'ReactFlipCard': true,\n        'ReactFlipCard--vertical': this.props.type === 'vertical',\n        'ReactFlipCard--horizontal': this.props.type !== 'vertical',\n        'ReactFlipCard--flipped': this.state.isFlipped,\n        'ReactFlipCard--enabled': !this.props.disabled\n      }),\n      tabIndex: 0,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeyDown: this.handleKeyDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ReactFlipCard__Flipper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ReactFlipCard__Front\",\n      ref: \"front\",\n      tabIndex: -1,\n      \"aria-hidden\": this.state.isFlipped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, this.props.children[0]), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ReactFlipCard__Back\",\n      ref: \"back\",\n      tabIndex: -1,\n      \"aria-hidden\": !this.state.isFlipped,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, this.props.children[1])));\n  },\n\n  _showBothSides() {\n    this.refs.front.style.display = '';\n    this.refs.back.style.display = '';\n  },\n\n  _hideFlippedSide() {\n    // This prevents the flipped side from being tabbable\n    if (this.props.disabled) {\n      if (this.state.isFlipped) {\n        this.refs.front.style.display = 'none';\n      } else {\n        this.refs.back.style.display = 'none';\n      }\n    }\n  }\n\n});","map":{"version":3,"sources":["/Users/s.vladimirov/Project/React/kancelaria/src/components/FlipCard/components/FlipCard.js"],"names":["React","PropTypes","findDOMNode","cx","contains","injectStyle","createClass","displayName","propTypes","type","string","flipped","bool","disabled","onFlip","func","onKeyDown","children","props","propName","componentName","prop","Children","count","Error","getDefaultProps","getInitialState","hasFocus","isFlipped","componentDidMount","_hideFlippedSide","componentWillReceiveProps","newProps","_showBothSides","setTimeout","setState","componentWillUpdate","nextProps","nextState","focusElement","document","activeElement","focusBack","state","notifyFlip","componentDidUpdate","focus","refs","back","handleFocus","handleBlur","handleKeyDown","e","render","front","style","display"],"mappings":"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","sourcesContent":["import React, { PropTypes } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport cx from 'classnames';\nimport contains from '../helpers/contains';\nimport injectStyle from '../helpers/injectStyle';\n\n// Auto inject the styles (will only be done once)\ninjectStyle();\n\nexport default React.createClass({\n  displayName: 'ReactFlipCard',\n\n  propTypes: {\n    type: PropTypes.string,\n    flipped: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onFlip: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    children(props, propName, componentName) {\n      const prop = props[propName];\n\n      if (React.Children.count(prop) !== 2) {\n        return new Error(\n          '`' + componentName + '` ' +\n          'should contain exactly two children. ' +\n          'The first child represents the front of the card. ' +\n          'The second child represents the back of the card.'\n        );\n      }\n    }\n  },\n\n  getDefaultProps() {\n    return {\n      type: 'horizontal',\n      flipped: false,\n      disabled: false\n    };\n  },\n\n  getInitialState() {\n    return {\n      hasFocus: false,\n      isFlipped: this.props.flipped\n    };\n  },\n\n  componentDidMount() {\n    this._hideFlippedSide();\n  },\n\n  componentWillReceiveProps(newProps) {\n    // Make sure both sides are displayed for animation\n    this._showBothSides();\n\n    // Wait for display above to take effect\n    setTimeout(() => {\n      this.setState({\n        isFlipped: newProps.flipped\n      });\n    }, 0);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    // If card is flipping to back via props, track element for focus\n    if (!this.props.flipped && nextProps.flipped) {\n      // The element that focus will return to when flipped back to front\n      this.focusElement = document.activeElement;\n      // Indicates that the back of card needs focus\n      this.focusBack = true;\n    }\n\n    // If isFlipped has changed need to notify\n    if (this.state.isFlipped !== nextState.isFlipped) {\n      this.notifyFlip = true;\n    }\n  },\n\n  componentDidUpdate() {\n    // If card has flipped to front, and focus is still within the card\n    // return focus to the element that triggered flipping to the back.\n    if (!this.props.flipped &&\n         this.focusElement &&\n         contains(findDOMNode(this), document.activeElement)\n       ) {\n      this.focusElement.focus();\n      this.focusElement = null;\n    }\n    // Direct focus to the back if needed\n    /* eslint brace-style:0 */\n    else if (this.focusBack) {\n      this.refs.back.focus();\n      this.focusBack = false;\n    }\n\n    // Notify card being flipped\n    if (this.notifyFlip && typeof this.props.onFlip === 'function') {\n      this.props.onFlip(this.state.isFlipped);\n      this.notifyFlip = false;\n    }\n\n    // Hide whichever side of the card is down\n    setTimeout(this._hideFlippedSide, 600);\n  },\n\n  handleFocus() {\n    if (this.props.disabled) return;\n\n    this.setState({\n      isFlipped: true\n    });\n  },\n\n  handleBlur() {\n    if (this.props.disabled) return;\n\n    this.setState({\n      isFlipped: false\n    });\n  },\n\n  handleKeyDown(e) {\n    if (typeof this.props.onKeyDown === 'function') {\n      this.props.onKeyDown(e);\n    }\n  },\n\n  render() {\n    return (\n      <div\n        className={cx({\n          'ReactFlipCard': true,\n          'ReactFlipCard--vertical': this.props.type === 'vertical',\n          'ReactFlipCard--horizontal': this.props.type !== 'vertical',\n          'ReactFlipCard--flipped': this.state.isFlipped,\n          'ReactFlipCard--enabled': !this.props.disabled\n        })}\n        tabIndex={0}\n        onFocus={this.handleFocus}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n      >\n        <div\n          className=\"ReactFlipCard__Flipper\"\n        >\n          <div\n            className=\"ReactFlipCard__Front\"\n            ref=\"front\"\n            tabIndex={-1}\n            aria-hidden={this.state.isFlipped}\n          >\n            {this.props.children[0]}\n          </div>\n          <div\n            className=\"ReactFlipCard__Back\"\n            ref=\"back\"\n            tabIndex={-1}\n            aria-hidden={!this.state.isFlipped}\n          >\n            {this.props.children[1]}\n          </div>\n        </div>\n      </div>\n    );\n  },\n\n  _showBothSides() {\n    this.refs.front.style.display = '';\n    this.refs.back.style.display = '';\n  },\n\n  _hideFlippedSide() {\n    // This prevents the flipped side from being tabbable\n    if (this.props.disabled) {\n      if (this.state.isFlipped) {\n        this.refs.front.style.display = 'none';\n      } else {\n        this.refs.back.style.display = 'none';\n      }\n    }\n  }\n});\n"]},"metadata":{},"sourceType":"module"}